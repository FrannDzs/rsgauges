// @file build.gradle
// rsgauges gradle build relay
//
buildscript {
  repositories {
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
  }
  dependencies {
    classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
  }
}
apply plugin: 'net.minecraftforge.gradle.forge'
sourceCompatibility = targetCompatibility = '1.8'
compileJava { // Need this here so eclipse task generates correctly.
  sourceCompatibility = targetCompatibility = '1.8'
}

//-----------------------------------------------------------------------------
version = "${version_rsgauges}"
group = "wile.rsgauges"
archivesBaseName = "rsgauges-${version_minecraft}"

def signing = { ->
  def sp = new Properties()
  if(file("signing.properties").exists()) file("signing.properties").withInputStream { sp.load(it) }
  return sp
}()

def git_version = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'log', '-1', '--format=%h'
    standardOutput = stdout
  }
  return stdout.toString().trim()
}()

minecraft {
  version = "${version_minecraft}-${version_forge}"
  runDir = "run"
  mappings = "stable_39"
  replace '@MOD_BUILDID@', "#${git_version}"
  replace '@MOD_SIGNSHA1@', signing.getProperty('fingerprint_sha1')
  replace '@MOD_VERSION@', "${version_rsgauges}"
  replace '@MOD_MCVERSION@', "${version_minecraft}"
  replaceIn "ModRsGauges.java"
}

dependencies {
}

processResources {
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'
    expand 'version':project.version, 'mcversion':project.minecraft.version
  }
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
  onlyIf { signing.getProperty("keystore_file"); }
  keyStore = signing.getProperty("keystore_file")
  alias = signing.getProperty("keystore_alias")
  storePass = signing.getProperty("keystore_pass")
  keyPass = signing.getProperty("keystore_keypass")
  inputFile = jar.archivePath
  outputFile = jar.archivePath
}
build.dependsOn signJar

// EOF
